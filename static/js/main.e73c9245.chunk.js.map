{"version":3,"sources":["components/FlightStatus.js","components/Airline.js","components/Flight.js","components/FlightList.js","components/DepArrButtons.js","components/Dates.js","components/TableHeaders.js","components/Schendule.js","App.js","serviceWorker.js","index.js"],"names":["FlightStatus","props","status","concat","factTime","react_default","a","createElement","Airline","className","src","elem","airline","en","logoSmallName","alt","name","timeView","FlightList","data","map","flight","departuresState","localDate","Date","timeDepShedule","timeToStand","localeTime","getHours","getMinutes","factDate","timeTakeofFact","timeLandFact","key","ID","term","gateNo","codeShareData","codeShare","href","Flight","DepArrButtons","type","onClick","changeTab","Dates","dateForLink","currentDate","todaysDate","datesForTable","TableHeaders","Schendule","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","departures","arrivals","filterDate","bind","assertThisInitialized","loadApi","prevProps","prevState","_this2","then","flights","setState","departure","filter","dateForFilter","sort","b","localeCompare","arrival","num","arguments","length","undefined","date","dateCorrected","correctDate","_ref","toConsumableArray","monthAndDayView","correctDay","correctMonth","getDate","getFullYear","time","toTimeString","slice","_ref2","getMonth","day","month","year","url","fetch","resolve","json","body","Component","App","Schendule_Schendule","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e73c9245.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function FlightStatus(props) {\n  let status;\n\n  switch (props.status) {\n    case 'DP':\n      status = `Departed at ${props.factTime}`;\n      break;\n    case 'LN':\n      status = `Landed at ${props.factTime}`;\n      break;\n    case 'CK':\n      status = 'Check in';\n      break;\n    case 'BD':\n      status = 'In boarding';\n      break;\n    case 'DL':\n      status = 'Delayed';\n      break;\n    case 'CX':\n      status = 'Cancelled';\n      break;\n    default:\n      status = 'On time';\n  }\n\n  return <td>{status}</td>;\n}\n","import React from 'react';\n\nexport default function Airline(props) {\n  return (\n    <p className=\"airline\">\n      <img src={props.elem.airline.en.logoSmallName} alt={props.elem.airline.en.name} />\n      <span>{props.elem.airline.en.name}</span>\n    </p>\n  )\n}\n","import React from 'react';\nimport FlightStatus from './FlightStatus';\nimport Airline from './Airline';\nimport './Flight.css';\n\nfunction timeView(elem) {\n  return elem < 10 ? `0${elem}` : elem;\n}\n\nexport default function Flight(props, departuresState) {\n  const localDate = new Date(props.timeDepShedule || props.timeToStand);\n  const localeTime = `\n        ${timeView(localDate.getHours())}:${timeView(localDate.getMinutes())}\n        `;\n  const factDate = new Date(departuresState ? props.timeTakeofFact : props.timeLandFact);\n  const factTime = `\n        ${timeView(factDate.getHours())}:${timeView(factDate.getMinutes())}\n        `;\n\n  return (\n    <tr className=\"flight\" key={props.ID}>\n      <td>\n        <span className={props.term === 'A' ? 'termA terminal' : 'termD terminal'}>{props.term}</span>\n      </td>\n      {departuresState\n        ? <td>{props.gateNo || ''}</td>\n        : null}\n      <td>{localeTime}</td>\n      <td>{props['airportToID.city_en'] || props['airportFromID.city_en']}</td>\n      <FlightStatus factTime={factTime} status={props.status} />\n      <td>{props.codeShareData.map(elem => <Airline elem={elem} key={elem.codeShare} /> )}</td>\n      <td>{props.codeShareData.map(elem => <p key={elem.codeShare} className=\"code-share\">{elem.codeShare}</p>)}</td>\n      <td><a href=\"#\" className=\"details\">Flight details</a></td>\n    </tr>\n  );\n}\n","import React from 'react';\nimport Flight from './Flight';\n\nexport default function FlightList(props) {\n  return (\n    <tbody>\n      {props.data.map(flight => Flight(flight, props.departuresState))}\n    </tbody>\n  );\n}\n","import React from 'react';\n\nexport default function DepArrButtons(props) {\n  return (\n    <section className=\"buttons\">\n      <button\n        type=\"button\"\n        className={`departure ${props.departuresState ? 'active' : ''}`}\n        onClick={() => props.changeTab(true)}\n      >\n        DEPARTURES\n      </button>\n      <button\n        type=\"button\"\n        className={`arrive ${!props.departuresState ? 'active' : ''}`}\n        onClick={() => props.changeTab(false)}\n      >\n        ARRIVALS\n      </button>\n    </section>\n  );\n}\n","import React from 'react';\n\nexport default function Dates(props) {\n  return (\n    <div className=\"dates\">\n      <div onClick={() => props.dateForLink(-1)}\n           className={`day ${props.currentDate === (props.todaysDate - 1) ? 'active' : ''}`}>\n        <div className=\"date\">\n        {props.datesForTable(-1)}\n        </div>\n        YESTERDAY\n      </div>\n      <div onClick={() => props.dateForLink()}\n           className={`day ${props.currentDate === props.todaysDate ? 'active' : ''}`}>\n        <div className=\"date\">\n          {props.datesForTable()}\n        </div>\n        TODAY\n      </div>\n      <div onClick={() => props.dateForLink(1)}\n           className={`day ${props.currentDate === (props.todaysDate + 1) ? 'active' : ''}`}>\n        <div className=\"date\">\n          {props.datesForTable(1)}\n        </div>\n        TOMORROW\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function TableHeaders(props) {\n  return (\n    <thead>\n      <tr>\n        <th>Terminal</th>\n        {props.departuresState ? <th>Gate</th> : null}\n        <th>Local time</th>\n        <th>Destination</th>\n        <th>Status</th>\n        <th>Airline</th>\n        <th>Flight</th>\n        <th>Details</th>\n        </tr>\n    </thead>\n  );\n}\n","import React, { Component } from 'react';\nimport FlightList from './FlightList';\nimport DepArrButtons from './DepArrButtons';\nimport Dates from './Dates';\nimport TableHeaders from './TableHeaders';\nimport './Schendule.css';\n\nexport default class Schendule extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      departuresState: true,\n      departures: [],\n      arrivals: [],\n      dateForLink: null,\n      filterDate: null,\n      todaysDate: null\n    };\n    this.changeTab = this.changeTab.bind(this);\n    this.dateForLink = this.dateForLink.bind(this);\n    this.datesForTable = this.datesForTable.bind(this);\n    this.loadApi = this.loadApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.dateForLink();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.dateForLink !== prevState.dateForLink) {\n      this.loadApi(`https://api.iev.aero/api/flights/${this.state.dateForLink}`)\n      .then(flights => this.setState({\n          departures: flights.departure\n            .filter(flight => this.dateForFilter(flight.timeDepShedule) === this.state.filterDate)\n            .sort((a, b) => a.timeDepShedule.localeCompare(b.timeDepShedule)),\n          arrivals: flights.arrival\n            .filter(flight => this.dateForFilter(flight.timeToStand) === this.state.filterDate)\n            .sort((a, b) => a.timeToStand.localeCompare(b.timeToStand))\n        })\n      )\n    }\n  }\n\n  dateForLink(num = 0) {\n    const date = new Date();\n    const dateCorrected = this.correctDate(date, num);\n    const [correctDay, correctMonth] = [...this.monthAndDayView(dateCorrected)];\n\n    this.setState({\n      todaysDate: date.getDate(),\n      dateForLink: `${correctDay}-${correctMonth}-${dateCorrected.getFullYear()}`,\n      filterDate: dateCorrected.getDate()\n    });\n  }\n\n  dateForFilter(date) {\n    return new Date(date).getDate();\n  }\n\n  timeForSort(time) {\n    return new Date(time).toTimeString().slice(0, 5);\n  }\n\n  datesForTable(num = 0) {\n    const todaysDate = new Date();\n    const dateCorrected = this.correctDate(todaysDate, num);\n    const [correctDay, correctMonth] = [...this.monthAndDayView(dateCorrected)];\n\n    return `${correctDay} / ${correctMonth}`;\n  }\n\n  monthAndDayView(date) {\n    const dayAndMonth = [date.getDate(), date.getMonth() + 1];\n\n    return dayAndMonth.map(elem => elem < 10 ? (`0${elem}`) : elem);\n  }\n\n  correctDate(date, num) {\n    const day = date.getDate() + num;\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    return new Date(year, month, day);\n  }\n\n  changeTab(departuresState) {\n    this.setState({\n      departuresState: departuresState\n    });\n  }\n\n  loadApi(url) {\n    return fetch(url)\n      .then(resolve => resolve.json())\n      .then(data => data.body);\n  }\n\n  render() {\n    return (\n      <section className=\"schendule\">\n        <DepArrButtons changeTab={this.changeTab} departuresState={this.state.departuresState} />\n        <Dates datesForTable={this.datesForTable} dateForLink={this.dateForLink}\n               currentDate={this.state.filterDate} todaysDate={this.state.todaysDate} />\n        <table>\n          <TableHeaders departuresState={this.state.departuresState} />\n          {this.state.departuresState\n            ? (\n              <FlightList\n                data={this.state.departures}\n                departuresState={this.state.departuresState}\n              />\n            )\n            : (\n              <FlightList\n                data={this.state.arrivals}\n              />\n            )\n          }\n        </table>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport Schendule from './components/Schendule';\n\nfunction App() {\n  return (\n    <Schendule />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost.\n        // Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}